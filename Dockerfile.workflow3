# Stage 1: Base image with common dependencies
FROM nvidia/cuda:11.8.0-cudnn8-runtime-ubuntu22.04 as base

# Prevents prompts from packages asking for user input during installation
ENV DEBIAN_FRONTEND=noninteractive
# Prefer binary wheels over source distributions for faster pip installations
ENV PIP_PREFER_BINARY=1
# Ensures output from python is printed immediately to the terminal without buffering
ENV PYTHONUNBUFFERED=1 

# Install Python, git and other necessary tools
RUN apt-get update && apt-get install -y \
    python3.10 \
    python3-pip \
    git \
    wget

# Clean up to reduce image size 
RUN apt-get autoremove -y && apt-get clean -y && rm -rf /var/lib/apt/lists/*

# Clone ComfyUI repository
RUN git clone https://github.com/comfyanonymous/ComfyUI.git /comfyui

# Change working directory to ComfyUI
WORKDIR /comfyui

# Install ComfyUI dependencies
RUN pip3 install --upgrade --no-cache-dir torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121 \
    && pip3 install --upgrade -r requirements.txt

# Install runpod 
RUN pip3 install runpod requests

# Support for the network volume
ADD src/extra_model_paths.yaml ./

# Clone required custom nodes
RUN mkdir -p custom_nodes && cd custom_nodes && \
    git clone https://github.com/giriss/comfy-image-saver && \
    git clone https://github.com/cubiq/ComfyUI_essentials && \
    git clone https://github.com/TheBill2001/comfyui-upscale-by-model && \
    git clone https://github.com/rgthree/rgthree-comfy && \
    git clone https://github.com/chflame163/ComfyUI_LayerStyle && \
    git clone https://github.com/evanspearman/ComfyMath && \
    git clone https://github.com/XLabs-AI/x-flux-comfyui && \
    git clone https://github.com/ssitu/ComfyUI_UltimateSDUpscale && \
    git clone https://github.com/ltdrdata/ComfyUI-Impact-Pack

# Go back to the root
WORKDIR /

# Add the start and the handler
ADD src/start.sh src/rp_handler.py test_input.json ./
RUN chmod +x /start.sh

# Stage 2: Download models
FROM base as downloader

ARG HUGGINGFACE_ACCESS_TOKEN
ENV HUGGINGFACE_ACCESS_TOKEN=${HUGGINGFACE_ACCESS_TOKEN}

# Change working directory to ComfyUI
WORKDIR /comfyui

# Create required model directories
RUN mkdir -p models/vae models/unet models/clip models/upscale_models models/loras

# Download VAE Model
RUN wget -O models/vae/ae.sft https://huggingface.co/Madespace/vae/resolve/main/ae.sft

# Download UNET Model
RUN wget --header="Authorization: Bearer ${HUGGINGFACE_ACCESS_TOKEN}" \
    -O models/unet/flux1-dev-fp8.safetensors https://huggingface.co/Madespace/Flux/resolve/main/flux-dev-fp8.safetensors

# Download CLIP Models
RUN wget --header="Authorization: Bearer ${HUGGINGFACE_ACCESS_TOKEN}" \
    -O models/clip/google_t5-v1_1-xxl_encoderonly-fp8_e4m3fn.safetensors https://huggingface.co/Madespace/clip/resolve/main/google_t5-v1_1-xxl_encoderonly-fp8_e4m3fn.safetensors && \
    wget --header="Authorization: Bearer ${HUGGINGFACE_ACCESS_TOKEN}" \
    -O models/clip/clip_l.safetensors https://huggingface.co/Madespace/clip/resolve/main/clip_l.safetensors

# Download Upscale Model (4x-Remacri)
RUN wget --header="Authorization: Bearer ${HUGGINGFACE_ACCESS_TOKEN}" \
    -O models/upscale_models/4x_foolhardy_Remacri.pth "https://huggingface.co/Madespace/Upscale/resolve/main/4x_foolhardy_Remacri.pth"

# Stage 3: Final image 
FROM base as final 

# Copy models from stage 2 to the final image
COPY --from=downloader /comfyui/models /comfyui/models
COPY --from=downloader /comfyui/custom_nodes /comfyui/custom_nodes

# Start the container
CMD /start.sh 